name: Deploy template

on:
  workflow_call:

env:
  SSH_PRIVATE_KEY: ${{vars.SSH_PRIVATE_KEY}}
  SSH_PUBLIC_KEY: ${{vars.SSH_PUBLIC_KEY}}
  SSH_KNOWN_HOSTS: ${{vars.SSH_KNOWN_HOSTS}}

jobs:
  setup_ssh:
    runs-on: ubuntu-latest
    steps:
      - name: Set up ssh
        run: |
          sudo apt update
          sudo apt install --only-upgrade libssl-dev
          mkdir ~/.ssh
          touch ~/.ssh/id_rsa
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          touch ~/.ssh/id_rsa.pub
          echo "$SSH_PUBLIC_KEY" > ~/.ssh/id_rsa.pub
          chown $USER ~/.ssh/id_rsa
          chown $USER ~/.ssh/id_rsa.pub
          touch ~/.ssh/known_hosts
          echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
          chmod 700 ~/.ssh
          chmod 600 ~/.ssh/id_rsa
          chmod 644 ~/.ssh/id_rsa.pub
          chmod 600 ~/.ssh/known_hosts
          eval $(ssh-agent -s)
          ssh-add ~/.ssh/id_rsa
      - name: Login in docker hub
        run: |
          docker context create swarm-cluster --docker "host=ssh://${{vars.DOCKER_SWARM_MASTER_SSH}}"
          docker context use swarm-cluster
          echo ${{vars.CI_REGISTRY_PASSWORD}} | docker login ${{vars.CI_REGISTRY_HOST}} -u ${{vars.CI_REGISTRY_USERNAME}} --password-stdin
